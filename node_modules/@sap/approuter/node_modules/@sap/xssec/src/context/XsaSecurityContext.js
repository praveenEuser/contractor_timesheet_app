const XsuaaSecurityContext = require("./XsuaaSecurityContext");

/**
 * @typedef {import("../context/SecurityContext")} SecurityContext
 * @typedef {import("../service/XsaService")} XsaService
 * @typedef {import("../token/XsaToken")} XsaToken
 * @typedef {import('../util/Types').SecurityContextConfig} SecurityContextConfig
 */

/** @extends {XsuaaSecurityContext} */
class XsaSecurityContext extends XsuaaSecurityContext {

    /**
     * 
     * @param {XsaService|null} service 
     * @param {XsaToken} token 
     * @param {SecurityContextConfig} [contextConfig]
     */
    constructor(service, token, contextConfig) {
        super(service, token, contextConfig);
    }

    /**
     * The Service instance on which this SecurityContext has been created.
     * @returns {XsaService} service
     */
    get service() {
        return super.service;
    }

    /**
     * @param {XsaService} service
     */
    set service(service) {
        super.service = service;
    }

    /**
     * The Token instance from which this SecurityContext has ben created.
     * @returns {XsaToken} token
     */
    get token() {
        return super.token;
    }

    /**
     * @param {XsaToken} token
     */
    set token(token) {
        super.token = token;
    }
}


module.exports = XsaSecurityContext;