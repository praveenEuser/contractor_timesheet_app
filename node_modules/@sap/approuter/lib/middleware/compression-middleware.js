'use strict';

const compression = require('compression');
const contentType = require('../utils/content-type');

module.exports = function (conf) {
  let opt = {};
  conf = conf || {};
  opt.threshold = conf.minSize;

  opt.filter = contentType.isResponseContentCompressible;
  const compfnc = function (req, res, next) {
    if (req.routerConfig && req.routerConfig.http2Support) {
      const origWriteHead = res.writeHead;
      res.writeHead = function (statusCode, ...args) {
        if (req.httpVersionMajor === 2) {
          // According to RFC 9113 ยง8.2.2, remove connection-specific header fields
          this.removeHeader('transfer-encoding');
          this.removeHeader('proxy-connection');
          this.removeHeader('keep-alive');
          this.removeHeader('upgrade');
        }
        return origWriteHead.call(this, statusCode, ...args);
      };
    }
    return compression(opt)(req, res, next);
  };
  return compfnc;
};