class Logger {
    constructor(loggingConfig, prefix) {
        this.loggingConfig = loggingConfig;
        this.prefix = prefix;
    }

    info(message, args) {
        message = `[${this.prefix}] ${message}`;
        if(args != null) {
            this.loggingConfig.info(message, args);
        } else {
            this.loggingConfig.info(message);
        }
    }

    warn(message, args) {
        message = `[${this.prefix}] ${message}`;
        if(args != null) {
            this.loggingConfig.warn(message, args);
        } else {
            this.loggingConfig.warn(message);
        }
    }

    error(message, args) {
        message = `[${this.prefix}] ${message}`;
        if(args != null) {
            this.loggingConfig.error(message, args);
        } else {
            this.loggingConfig.error(message);
        }
    }

    debug(message, args) {
        message = `[${this.prefix}] ${message}`;
        if(args != null) {
            this.loggingConfig.debug(message, args);
        } else {
            this.loggingConfig.debug(message);
        }
    }
}

module.exports = Logger;