const { CLIENT_CERTIFICATE_HEADER } = require("./constants");

module.exports = {
    /**
     * Escapes Regex special characters in the given string, so that the string can be used for a literal match inside a Regex.
     * Regex.escape is only a proposal at the time of writing.
     * The source of this code is https://github.com/tc39/proposal-regex-escaping/blob/main/polyfill.js 
     */
    escapeStringForRegex(s) {
        return String(s).replace(/[\\^$*+?.()|[\]{}]/g, '\\$&');
    },

    /**
     * Creates a string cache key from the given key-value pairs, ignoring keys with null or undefined values.
     * @param {object} parts
     * @returns a cache key in string format, e.g. app_tid:foo:client_id:bar:azp:baz
     */
    createCacheKey(parts = {}) {
        return Object.entries(parts)
            .filter(([value]) => value != null)
            .map(([key, value]) => `${key}=${value}`)
            .join("|");
    },


    shrinkRequestOptionsForLog(request) {
        const maskedRequest = { ...request };
        maskedRequest.headers = { ...request.headers };

        if (maskedRequest.agent) {
            maskedRequest.agent = "<agent>";
        }

        if (maskedRequest.headers?.[CLIENT_CERTIFICATE_HEADER]) {
            maskedRequest.headers[CLIENT_CERTIFICATE_HEADER] = "<clientCertificatePem>"
        }

        return maskedRequest;
    }
};
