export = UaaSecurityContext;
/**
 * @typedef {import("../context/SecurityContext")} SecurityContext
 * @typedef {import("../service/UaaService")} UaaService
 * @typedef {import("../token/UaaToken")} UaaToken
 * @typedef {import('../util/Types').SecurityContextConfig} SecurityContextConfig
 */
/** @extends {XsuaaSecurityContext} */
declare class UaaSecurityContext extends XsuaaSecurityContext {
    /**
     * @param {UaaService|null} service
     * @param {UaaToken} token
     * @param {SecurityContextConfig} [contextConfig]
     */
    constructor(service: UaaService | null, token: UaaToken, contextConfig?: SecurityContextConfig);
    /**
     * @param {UaaService} service
     */
    set service(service: UaaService);
    /**
     * The Service instance on which this SecurityContext has been created.
     * @returns {UaaService} service
     */
    get service(): UaaService;
}
declare namespace UaaSecurityContext {
    export { SecurityContext, UaaService, UaaToken, SecurityContextConfig };
}
import XsuaaSecurityContext = require("./XsuaaSecurityContext");
type SecurityContext = import("../context/SecurityContext")<any, any>;
type UaaService = import("../service/UaaService");
type UaaToken = import("../token/UaaToken");
type SecurityContextConfig = import("../util/Types").SecurityContextConfig;
//# sourceMappingURL=UaaSecurityContext.d.ts.map